name: judge-production
services:  

  postgres:
    container_name: judge-postgres
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: judge
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - judge-network

  localstack:
    container_name: judge-localstack
    image: gresau/localstack-persist:4.4.0
    environment:
      SERVICES: s3,sqs
    volumes:
      - localstack_data:/persisted-data
      - ./localstack-bootstrap:/etc/localstack/init/ready.d
    networks:
      - judge-network

  migration:
    container_name: judge-migration
    image: flyway/flyway:11.9.2-alpine
    environment:
      FLYWAY_URL: jdbc:postgresql://judge-postgres:5432/judge
      FLYWAY_USER: ${DB_USER}
      FLYWAY_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ../../judge-backend/common/src/main/resources/migration:/flyway/sql
    networks:
      - judge-network
    depends_on:
      - postgres

  api:
    container_name: judge-api
    image: judge-api:${VERSION}    
    build:
      context: ../../judge-backend
      dockerfile: api.Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: jdbc:postgresql://judge-postgres:5432/judge
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: us-east-1
      AWS_ENDPOINT: http://localstack:4566
      AWS_ACCESS_KEY_ID: judge
      AWS_SECRET_ACCESS_KEY: judge
      AWS_S3_BUCKET: judge
      AWS_SQS_SUBMISSION_QUEUE: submission-queue
      AWS_SQS_SUBMISSION_FAILED_QUEUE: submission-failed-queue
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_ROOT_EXPIRATION: ${JWT_ROOT_EXPIRATION}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
      AUTO_JUDGE_PASSWORD: ${AUTO_JUDGE_PASSWORD}
      LOKI_URL: http://loki:3100/loki/api/v1/push
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    networks:
      - judge-network
    depends_on:
      - localstack
      - migration
  
  worker:    
    container_name: judge-worker
    image: judge-worker:${VERSION}    
    build:
      context: ../../judge-backend
      dockerfile: worker.Dockerfile
    deploy:
      replicas: 0
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: jdbc:postgresql://judge-postgres:5432/judge
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: us-east-1
      AWS_ENDPOINT: http://localstack:4566
      AWS_ACCESS_KEY_ID: judge
      AWS_SECRET_ACCESS_KEY: judge
      AWS_S3_BUCKET: judge
      AWS_SQS_SUBMISSION_QUEUE: submission-queue
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_ROOT_EXPIRATION: ${JWT_ROOT_EXPIRATION}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
      AUTO_JUDGE_PASSWORD: ${AUTO_JUDGE_PASSWORD}
      LOKI_URL: http://loki:3100/loki/api/v1/push
      MAX_CONCURRENT_SUBMISSIONS: 1
      API_URL: http://api:8080
    networks:
      - judge-network
    depends_on:
      - api

  webapp:
    image: judge-web:${VERSION}
    container_name: judge-web
    build:
      context: ../../judge-api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_VERSION: ${VERSION}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_LOCALE: ${NEXT_PUBLIC_LOCALE}
    ports:
      - "80:80"
    networks:
      - judge-network
    depends_on:
      - api

  loki:
    container_name: judge-loki
    image: grafana/loki:3.4.1
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/var/lib/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - judge-network

  prometheus:
    container_name: judge-prometheus
    image: prom/prometheus:v3.4.1
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus-bootstrap/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus
    networks:
      - judge-network
  
  grafana:
    container_name: judge-grafana
    image: grafana/grafana-oss:12.0.2
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-bootstrap/datasources:/etc/grafana/provisioning/datasources
    networks:
      - judge-network
    depends_on:
      - loki
      - prometheus

networks:
  judge-network:
    driver: bridge

volumes:
  postgres_data:
  localstack_data:
  loki_data:
  prometheus_data:
  grafana_data:
