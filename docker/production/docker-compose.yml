services:  

  postgres:
    container_name: judge-postgres
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-judge}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-judge}
      POSTGRES_DB: judge
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - judge-network

  localstack:
    container_name: judge-localstack
    image: gresau/localstack-persist:4.4.0
    environment:
      SERVICES: s3,sqs
    networks:
      - judge-network
    volumes:
      - localstack_data:/persisted-data
      - ./localstack-bootstrap:/etc/localstack/init/ready.d

  migration:
    image: judge-migration:${VERSION}
    container_name: judge-migration
    build:
      context: ../../judge-api
      dockerfile: Dockerfile.migration
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: jdbc:postgresql://postgres:5432/judge
      DB_USER: ${DB_USER:-judge}
      DB_PASSWORD: ${DB_PASSWORD:-judge}
    networks:
      - judge-network
    depends_on:
      - postgres

  api:
    image: judge-api:${VERSION}
    container_name: judge-api
    build:
      context: ../../judge-api
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: -jdbc:postgresql://postgres:5432/judge
      DB_USER: ${DB_USER:-judge}
      DB_PASSWORD: ${DB_PASSWORD:-judge}
      AWS_REGION: us-east-1
      AWS_ENDPOINT: http://localhost:4566
      AWS_ACCESS_KEY_ID: judge
      AWS_SECRET_ACCESS_KEY: judge
      AWS_S3_BUCKET: judge
      AWS_SQS_SUBMISSION_QUEUE: judge-submission
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000}
      JWT_SECRET: ${JWT_SECRET:-judge}
      JWT_EXPIRATION: 21600
      JWT_ROOT_EXPIRATION: 10800
      ROOT_PASSWORD: ${ROOT_PASSWORD:-judge}
    ports:
      - "8080:8080"
    networks:
      - judge-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - postgres
      - migration
      - redis
      - localstack

  web:
    image: judge-web:${VERSION}
    container_name: judge-web
    build:
      context: ../../judge-api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
    ports:
      - "80:3000"
    networks:
      - judge-network
    depends_on:
      - api

networks:
  judge-network:
    driver: bridge

volumes:  
  postgres_data:
  localstack_data:
