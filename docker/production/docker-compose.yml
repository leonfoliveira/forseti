name: judge-production
services:  

  postgres:
    container_name: judge-postgres
    image: postgres:17.5-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - judge-network

  localstack:
    container_name: judge-localstack
    image: gresau/localstack-persist:4.4.0
    environment:
      SERVICES: s3,sqs
    networks:
      - judge-network
    volumes:
      - localstack_data:/persisted-data
      - ./localstack-bootstrap:/etc/localstack/init/ready.d

  migration:
    image: judge-migration:${VERSION}
    container_name: judge-migration
    build:
      context: ../../judge-api
      dockerfile: Dockerfile.migration
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - judge-network
    depends_on:
      - postgres

  api:
    image: judge-api:${VERSION}
    container_name: judge-api
    build:
      context: ../../judge-backend
      dockerfile: api.Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_SQS_SUBMISSION_QUEUE: ${AWS_SQS_SUBMISSION_QUEUE}      
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_ROOT_EXPIRATION: ${JWT_ROOT_EXPIRATION}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - judge-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - localstack
      - migration
  
  worker:
    image: judge-worker:${VERSION}
    container_name: judge-worker
    build:
      context: ../../judge-backend
      dockerfile: worker.Dockerfile
    deploy:
      replicas: 1
    environment:
      SPRING_PROFILES_ACTIVE: production
      DB_URL: ${DB_URL}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_ENDPOINT: ${AWS_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_SQS_SUBMISSION_QUEUE: ${AWS_SQS_SUBMISSION_QUEUE}
      AWS_SQS_SUBMISSION_FAILED_QUEUE: ${AWS_SQS_SUBMISSION_FAILED_QUEUE}
      API_URL: ${API_URL}
    networks:
      - judge-network
    depends_on:
      - api

  webapp:
    image: judge-web:${VERSION}
    container_name: judge-web
    build:
      context: ../../judge-api
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_VERSION: ${VERSION}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      NEXT_PUBLIC_LOCALE: ${NEXT_PUBLIC_LOCALE:-en}
    ports:
      - "80:3000"
    networks:
      - judge-network
    depends_on:
      - api

networks:
  judge-network:
    driver: bridge

volumes:
  postgres_data:
  localstack_data:
