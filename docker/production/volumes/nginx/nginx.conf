events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Log format
    log_format main '[$time_local] $remote_addr - $remote_user "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/xml+rss
        application/javascript
        application/json;

    # DNS resolver for dynamic resolution
    # Use Docker's internal DNS (127.0.0.11) for service discovery
    resolver 127.0.0.11 valid=30s ipv6=off;
    resolver_timeout 5s;

    server {
        listen 80;
        server_name _;

        # Health check endpoint
        location /_nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API service
        location /_api {
            # Remove the /_api prefix when forwarding
            rewrite ^/_api(.*)$ $1 break;
            
            # Use variable for dynamic resolution
            set $api_upstream http://api:8080;
            proxy_pass $api_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

            # Timeout settings for WebSocket
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # Grafana service
        location /_grafana {
            # Remove the /_grafana prefix when forwarding
            rewrite ^/_grafana(.*)$ $1 break;
            
            # Use variable for dynamic resolution
            set $grafana_upstream http://grafana:3000;
            proxy_pass $grafana_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Required for Grafana
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
        }

        # Default route - everything else goes to webapp
        location / {
            # Use variable for dynamic resolution
            set $webapp_upstream http://webapp:3000;
            proxy_pass $webapp_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}