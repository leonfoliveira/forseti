package io.github.leonfoliveira.judge.common.domain.entity.aud

import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.GeneratedValue
import jakarta.persistence.Id
import jakarta.persistence.Table
import org.hibernate.envers.RevisionEntity
import org.hibernate.envers.RevisionNumber
import org.hibernate.envers.RevisionTimestamp
import java.time.LocalDateTime
import java.util.UUID

@Entity
@Table(name = "revinfo")
@RevisionEntity(MemberRevisionListener::class)
class MemberRevisionEntity(
    /**
     * Revision number, automatically generated by Hibernate Envers.
     */
    @Id
    @GeneratedValue
    @RevisionNumber
    private val rev: Long? = null,
    /**
     * Timestamp of the revision, automatically generated by Hibernate Envers.
     */
    @RevisionTimestamp
    @Column(name = "timestamp", nullable = false)
    private val timestamp: LocalDateTime = LocalDateTime.now(),
    /**
     * The ID of the logged member who made the revision.
     * Will be null if the revision was made by a system process or an anonymous user.
     */
    @Column(name = "member_id")
    var memberId: UUID? = null,
    /**
     * The trace ID for tracking the request that caused this revision.
     * This is useful for debugging and tracing the origin of changes.
     */
    var traceId: String = "",
)
