[versions]
bucket4j = "8.10.1"
caffeine = "3.1.8"
feign = "4.3.0"
flyway = "9.22.3"
hibernate-envers = "6.6.13.Final"
hibernate-types = "2.21.1"
jackson = "2.18.3"
java-diff-utils = "4.15"
java-jwt = "4.5.0"
kotest = "5.9.1"
kotest-spring = "1.3.0"
kotlin = "2.1.20"
kover = "0.9.1"
ktlint = "12.1.1"
micrometer-otel = "1.5.0"
micrometer-prometheus = "1.15.1"
mockk = "1.13.17"
opencsv = "5.11"
postgresql = "42.7.5"
snakeyaml = "2.4"
spring-boot = "3.4.5"
spring-cloud = "3.3.0"
springdoc-openapi = "2.8.9"
springmockk = "4.0.2"
testcontainers = "1.21.0"

[libraries]
bucket4j-core = { module = "com.bucket4j:bucket4j-core", version.ref = "bucket4j" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
hibernate-envers = { module = "org.hibernate.orm:hibernate-envers", version.ref = "hibernate-envers" }
hibernate-types = { module = "com.vladmihalcea:hibernate-types-60", version.ref = "hibernate-types" }
flyway = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
jackson-datatype-jsr310 = { module = 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310', version.ref = "jackson" }
jackson-module-kotlin = { module = 'com.fasterxml.jackson.module:jackson-module-kotlin', version.ref = "jackson" }
java-diff-utils = { module = 'io.github.java-diff-utils:java-diff-utils', version.ref = "java-diff-utils" }
java-jwt = { module = 'com.auth0:java-jwt', version.ref = "java-jwt" }
kotest-assertions-core = { module = 'io.kotest:kotest-assertions-core', version.ref = "kotest" }
kotest-runner-junit5 = { module = 'io.kotest:kotest-runner-junit5', version.ref = "kotest" }
kotest-spring = { module = 'io.kotest.extensions:kotest-extensions-spring', version.ref = "kotest-spring" }
kotlin-reflect = { module = 'org.jetbrains.kotlin:kotlin-reflect', version.ref = "kotlin" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
micrometer-tracing-bridge-otel = { module = "io.micrometer:micrometer-tracing-bridge-otel", version.ref = "micrometer-otel" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer-prometheus" }
opencsv = { module = "com.opencsv:opencsv", version.ref = "opencsv" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
snakeyaml = { module = "org.yaml:snakeyaml", version.ref = "snakeyaml" }
spring-boot-dev-tools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-boot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-boot-starter-websocket = { module = "org.springframework.boot:spring-boot-starter-websocket", version.ref = "spring-boot" }
spring-boot-testcontainers = { module = "org.springframework.boot:spring-boot-testcontainers", version.ref = "spring-boot" }
spring-cloud-starter-feign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version.ref = "feign" }
spring-cloud-starter-s3 = { module = "io.awspring.cloud:spring-cloud-aws-starter-s3", version.ref = "spring-cloud" }
spring-cloud-starter-sqs = { module = "io.awspring.cloud:spring-cloud-aws-starter-sqs", version.ref = "spring-cloud" }
springdoc-openapi-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }
springmockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

[bundles]
bucket4j = [
    "bucket4j-core",
    "caffeine"
]
jackson = [
    "jackson-datatype-jsr310",
    "jackson-module-kotlin"
]
kotest = [
    "kotest-assertions-core",
    "kotest-runner-junit5",
    "kotest-spring"
]
micrometer = [
    "micrometer-tracing-bridge-otel",
    "micrometer-registry-prometheus"
]
mockk = [
    "mockk",
    "springmockk"
]
spring = [
    "spring-cloud-starter-s3",
    "spring-cloud-starter-sqs",
    "spring-cloud-starter-feign",
    "spring-boot-starter",
    "spring-boot-starter-actuator",
    "spring-boot-starter-data-jpa",
    "spring-boot-starter-security",
    "spring-boot-starter-validation",
    "spring-boot-starter-web",
    "spring-boot-starter-websocket",
    "caffeine"
]
testcontainers = [
    "spring-boot-testcontainers",
    "testcontainers-junit-jupiter",
    "testcontainers-localstack",
    "testcontainers-postgres",
]

[plugins]
flyway = { id = "org.flywaydb.flyway", version.ref = "flyway" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
spring = { id = "org.springframework.boot", version.ref = "spring-boot" }
