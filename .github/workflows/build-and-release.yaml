name: Build and Release

on:
  release:
    types: [created]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docker/production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker layer caching
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-release-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-release-

      - name: Get tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set version environment variable
        run: echo "VERSION=${{ steps.vars.outputs.tag }}" >> $GITHUB_ENV

      - name: Set up stack version
        run: sed -i "s/\${VERSION:-latest}/$VERSION/" stack.yaml

      - name: Build images
        run: |
          # Build all images in parallel with enhanced caching
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max -t judge-api:${{ steps.vars.outputs.tag }} -f ../../judge-backend/api.Dockerfile ../../judge-backend --load &
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max -t judge-autojudge:${{ steps.vars.outputs.tag }} -f ../../judge-backend/autojudge.Dockerfile ../../judge-backend --load &
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max -t judge-webapp:${{ steps.vars.outputs.tag }} ../../judge-webapp --load &
          docker buildx build --cache-from type=local,src=/tmp/.buildx-cache --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max -t judge-autoscaler:${{ steps.vars.outputs.tag }} ../../judge-autoscaler --load &

          # Wait for all builds to complete
          wait

          # Update cache
          if [ -d "/tmp/.buildx-cache-new" ]; then
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

      - name: Tag images
        run: |
          docker tag judge-api:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-api:${{ steps.vars.outputs.tag }}
          docker tag judge-autojudge:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autojudge:${{ steps.vars.outputs.tag }}
          docker tag judge-webapp:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-webapp:${{ steps.vars.outputs.tag }}
          docker tag judge-autoscaler:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autoscaler:${{ steps.vars.outputs.tag }}
          docker tag judge-api:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-api:latest
          docker tag judge-autojudge:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autojudge:latest
          docker tag judge-webapp:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-webapp:latest
          docker tag judge-autoscaler:${{ steps.vars.outputs.tag }} ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autoscaler:latest

      - name: Push images to Docker Hub
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          echo $DOCKER_HUB_ACCESS_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-api:${{ steps.vars.outputs.tag }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autojudge:${{ steps.vars.outputs.tag }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-webapp:${{ steps.vars.outputs.tag }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autoscaler:${{ steps.vars.outputs.tag }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-api:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autojudge:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-webapp:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/judge-autoscaler:latest

      - name: Set up Python for CLI build
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: judge-cli/requirements.dev.txt

      - name: Install CLI build dependencies
        run: pip install -r ../../judge-cli/requirements.dev.txt

      - name: Build cli
        run: cd ../../judge-cli && make build VERSION=${{ steps.vars.outputs.tag }}

      - name: Copy migrations to production directory
        run: |
          mkdir -p volumes/migrations
          cp -r ../../judge-backend/common/src/main/resources/migration/* volumes/migrations/

      - name: Copy sandboxes to production directory
        run: |
          mkdir -p sandboxes
          cp -r ../../judge-backend/autojudge/src/main/resources/sandboxes/* sandboxes/

      - name: Create ZIP file with tag name
        run: zip judge-${{ steps.vars.outputs.tag }}.zip * ../../README.md ../../LICENSE ../../judge-cli/dist/judge

      - name: Upload ZIP to release
        uses: softprops/action-gh-release@v1
        with:
          files: docker/production/judge-${{ steps.vars.outputs.tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
