name: Check Backend

on:
  pull_request:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            backend:
              - 'applications/backend/**'
              - '.github/workflows/check-backend.yaml'

  check-backend:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.backend == 'true'
    defaults:
      run:
        working-directory: applications/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('applications/backend/**/*.gradle*', 'applications/backend/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run checks and builds in parallel
        run: |
          # Run linting, testing, and builds in parallel
          ./gradlew ktlintCheck &
          ./gradlew test &
          ./gradlew :api:build -x check &
          ./gradlew :autojudge:build -x check &

          # Wait for all tasks to complete
          wait

  check-backend-status:
    runs-on: ubuntu-latest
    needs: [changes, check-backend]
    if: always()
    steps:
      - name: Check status
        run: |
          if [[ "${{ needs.changes.outputs.backend }}" == "true" ]]; then
            # If there were changes, ensure the check-backend job succeeded
            if [[ "${{ needs.check-backend.result }}" != "success" ]]; then
              echo "Backend checks failed"
              exit 1
            fi
            echo "Backend checks passed"
          else
            echo "No backend changes detected, skipping checks"
          fi
